import React, {useEffect} from 'react'
import s from './index.module.scss'
import Row from '../../Row'
import WhiteLabel from '../../WhiteLabel'
import Col from '../../Col'
import CheckBox from '../../CheckBox/index'
import {ReactSortable} from 'react-sortablejs'
import ButtonSVG from '../../ButtonSVG/index';
import BlueButton from '../../BlueButton/index';
import Button from '../../Button/index';

interface ITableCol {
	onExit?: () => void
}

const sortData = [
	'Название, ID',
	'Рекл. статус',
	'Статус',
	'Аудитория и баннеры',
]

const TableCol: React.FC<ITableCol> = ({onExit}: ITableCol) => {
	// const colClassName = `col ${className}`; // Combine className with "col" class using s[className]

	const [data, setData] = React.useState([
		{
			name: 'Название, ID',
			cols: [
				{name: 'Столбец 1', isChecked: false},
				{name: 'Столбец 2', isChecked: false},
				{name: 'Столбец 3', isChecked: false},
			],
		},
		{
			name: 'Название, ID2',
			cols: [
				{name: 'Столбец 1', isChecked: false},
				{name: 'Столбец 2', isChecked: false},
				{name: 'Столбец 3', isChecked: false},
			],
		},
		{
			name: 'Название, ID3',
			cols: [
				{name: 'Столбец 1', isChecked: false},
				{name: 'Столбец 2', isChecked: false},
				{name: 'Столбец 3', isChecked: false},
			],
		},
		{
			name: 'Название, ID4',
			cols: [
				{name: 'Столбец 1', isChecked: false},
				{name: 'Столбец 2', isChecked: false},
				{name: 'Столбец 3', isChecked: false},
			],
		},
	])

	const [sortDataState, setSortDataState] = React.useState(sortData)

	let [mapColumns, setMapColumns] = React.useState(
		<>
			{data.map((item, index_item) => (
				<div id={`data-item-cols-${index_item}`}>
					<Row
						width="279px"
						onClick={() => {
							const cols = document.getElementById(
								`data-item-cols-${index_item}-col`,
							)
							if (cols) {
								//is hidden
								if (cols.style.display === 'none') {
									cols.style.display = 'block'
								} else {
									cols.style.display = 'none'
								}
							}
						}}
						className="cursor-pointer justify-between px-[16px] items-center h-[48px] border-b border-[#333333]">
						<WhiteLabel
							className="font-normal text-[#FFFFFF]"
							size="14px"
							text={item.name}
						/>
						<svg
							width="16"
							height="16"
							viewBox="0 0 16 16"
							fill="none"
							xmlns="http://www.w3.org/2000/svg">
							<path
								d="M3 11L8 6L13 11"
								stroke="#808080"
								strokeWidth="1.4"
								strokeLinecap="round"
								strokeLinejoin="round"
							/>
						</svg>
					</Row>
					<div
						style={{display: 'none'}}
						id={`data-item-cols-${index_item}-col`}>
						{item.cols.map((col, index: number) => (
							<Row
								key={index}
								width="279px"
								className="border-b border-[#333333] justify-between px-[16px] items-center h-[48px]">
								<CheckBox
									id={`${index}-${item.name}`}
									className={`
									 ${s.checkBoxClass}`}
									labelText={col.name}
									isChangeOnActive={true}
								/>
							</Row>
						))}
					</div>
				</div>
			))}
		</>,
	)

	useEffect(() => {
		setMapColumns((preview) => preview)
	}, [data, mapColumns])
	return (
		<Col
			className={`
        w-[560px]
        h-[700px]
        bg-[#262626]
        border-[#333333]
        border-[1px]
        rounded-[10px]
        `}>
			<Row
				width="560px"
				className={`flex border-b border-[#333333] font-semibold items-center justify-between`}>
				<WhiteLabel
					className="text-[#FFFFFF] ml-[16px] my-[13px]"
					size="16px"
					text="Столбцы"
				/>
				<svg
					onClick={onExit}
					className="cursor-pointer mr-[20px] my-[13px]"
					width="10"
					height="10"
					viewBox="0 0 10 10"
					fill="none"
					xmlns="http://www.w3.org/2000/svg">
					<path
						d="M0.164743 9.83518C0.240399 9.90666 0.326563 9.95502 0.423234 9.98025C0.519905 10.0055 0.616577 10.0055 0.713248 9.98025C0.809919 9.95502 0.893981 9.90666 0.965434 9.83518L5.00041 5.79829L9.03539 9.83518C9.10684 9.90666 9.1909 9.95502 9.28757 9.98025C9.38425 10.0055 9.48197 10.0065 9.58074 9.98341C9.67951 9.96028 9.76463 9.91087 9.83608 9.83518C9.90753 9.76369 9.95482 9.67959 9.97793 9.58287C10.0011 9.48616 10.0011 9.38944 9.97793 9.29272C9.95482 9.196 9.90753 9.1119 9.83608 9.04042L5.8011 4.99722L9.83608 0.960337C9.90753 0.888851 9.95587 0.804749 9.98109 0.708032C10.0063 0.611315 10.0063 0.514598 9.98109 0.417881C9.95587 0.321164 9.90753 0.237062 9.83608 0.165575C9.76042 0.0898838 9.67426 0.040474 9.57759 0.017346C9.48092 -0.005782 9.38425 -0.005782 9.28757 0.017346C9.1909 0.040474 9.10684 0.0898838 9.03539 0.165575L5.00041 4.20246L0.965434 0.165575C0.893981 0.0898838 0.808869 0.040474 0.710096 0.017346C0.611323 -0.005782 0.513601 -0.005782 0.416929 0.017346C0.320258 0.040474 0.236196 0.0898838 0.164743 0.165575C0.0932906 0.237062 0.0460057 0.321164 0.0228886 0.417881C-0.000228429 0.514598 -0.000228429 0.611315 0.0228886 0.708032C0.0460057 0.804749 0.0932906 0.888851 0.164743 0.960337L4.19972 4.99722L0.164743 9.04042C0.0932906 9.1119 0.0449549 9.196 0.0197363 9.29272C-0.00548231 9.38944 -0.00653308 9.48616 0.016584 9.58287C0.039701 9.67959 0.0890875 9.76369 0.164743 9.83518Z"
						fill="#808080"
					/>
				</svg>
			</Row>
			<Row width="560px" className="">
				<Col
					width="279px"
					className="border-r border-[#333333] h-[648px] overflow-y-hidden overflow-x-hidden justify-between">
					<Col className='max-h-[650px] overflow-y-scroll' width="279px">
						{mapColumns}
					</Col>
					<Row className='p-[16px]' width="279px">
						<Button className='border-[#333] border-[1px] rounded-[8px] mr-2' width='120px' text='Сбросить' />
						<BlueButton width='120px' text='Сохранить'/>
					</Row>
				</Col>
				<Col className="overflow-y-auto overflow-x-hidden">
					<ReactSortable
						list={sortDataState}
						setList={setSortDataState}
						tag={'div'}>
						{sortDataState.map((item, index) => (
							<Row
								key={index}
								width="266px"
								className="cursor-pointer w-[256px] my-[8px] h-[36px] overflow-y-auto justify-center items-center">
								<svg
									className="mr-[8px]"
									width="24"
									height="24"
									viewBox="0 0 24 24"
									fill="none"
									xmlns="http://www.w3.org/2000/svg">
									<path
										fillRule="evenodd"
										clipRule="evenodd"
										d="M16.2079 7.66019C16.0132 7.85027 15.777 7.94531 15.4991 7.94531C15.313 7.94531 15.1449 7.9009 14.9949 7.81209C14.8449 7.72327 14.7249 7.60572 14.635 7.45944C14.545 7.31316 14.5 7.1488 14.5 6.96636C14.5 6.78989 14.545 6.62823 14.635 6.4814C14.7249 6.33457 14.8449 6.21763 14.9949 6.13058C15.1449 6.04353 15.313 6 15.4991 6C15.6839 6 15.8519 6.04353 16.0031 6.13058C16.1544 6.21763 16.275 6.33457 16.365 6.4814C16.455 6.62823 16.5 6.78989 16.5 6.96636C16.5 7.23883 16.4026 7.47011 16.2079 7.66019ZM16.2079 12.6958C16.0132 12.8861 15.777 12.9813 15.4991 12.9813C15.313 12.9813 15.1449 12.9374 14.9949 12.8497C14.8449 12.762 14.7249 12.6448 14.635 12.4981C14.545 12.3514 14.5 12.1879 14.5 12.0076C14.5 11.8286 14.545 11.6652 14.635 11.5172C14.7249 11.3693 14.8449 11.2521 14.9949 11.1657C15.1449 11.0792 15.313 11.036 15.4991 11.036C15.6839 11.036 15.8519 11.0792 16.0031 11.1657C16.1544 11.2521 16.275 11.3693 16.365 11.5172C16.455 11.6652 16.5 11.8286 16.5 12.0076C16.5 12.2761 16.4026 12.5055 16.2079 12.6958ZM15.4991 18C15.777 18 16.0132 17.9053 16.2079 17.7159C16.4026 17.5265 16.5 17.2982 16.5 17.031C16.5 16.8504 16.455 16.6862 16.365 16.5384C16.275 16.3905 16.1544 16.2729 16.0031 16.1856C15.8519 16.0983 15.6839 16.0547 15.4991 16.0547C15.313 16.0547 15.1449 16.0983 14.9949 16.1856C14.8449 16.2729 14.7249 16.3905 14.635 16.5384C14.545 16.6862 14.5 16.8504 14.5 17.031C14.5 17.208 14.545 17.3701 14.635 17.5173C14.7249 17.6645 14.8449 17.7818 14.9949 17.8691C15.1449 17.9564 15.313 18 15.4991 18ZM9.20794 7.66019C9.01324 7.85027 8.77697 7.94531 8.49914 7.94531C8.31297 7.94531 8.14489 7.9009 7.99491 7.81209C7.84492 7.72327 7.72494 7.60572 7.63496 7.45944C7.54499 7.31316 7.5 7.1488 7.5 6.96636C7.5 6.78989 7.54499 6.62823 7.63496 6.4814C7.72494 6.33457 7.84492 6.21763 7.99491 6.13058C8.14489 6.04353 8.31297 6 8.49914 6C8.68389 6 8.85188 6.04353 9.00312 6.13058C9.15437 6.21763 9.27499 6.33457 9.36499 6.4814C9.455 6.62823 9.5 6.78989 9.5 6.96636C9.5 7.23883 9.40265 7.47011 9.20794 7.66019ZM9.20794 12.6958C9.01324 12.8861 8.77697 12.9813 8.49914 12.9813C8.31297 12.9813 8.14489 12.9374 7.99491 12.8497C7.84492 12.762 7.72494 12.6448 7.63496 12.4981C7.54499 12.3514 7.5 12.1879 7.5 12.0076C7.5 11.8286 7.54499 11.6652 7.63496 11.5172C7.72494 11.3693 7.84492 11.2521 7.99491 11.1657C8.14489 11.0792 8.31297 11.036 8.49914 11.036C8.68389 11.036 8.85188 11.0792 9.00312 11.1657C9.15437 11.2521 9.27499 11.3693 9.36499 11.5172C9.455 11.6652 9.5 11.8286 9.5 12.0076C9.5 12.2761 9.40265 12.5055 9.20794 12.6958ZM8.49914 18C8.77697 18 9.01324 17.9053 9.20794 17.7159C9.40265 17.5265 9.5 17.2982 9.5 17.031C9.5 16.8504 9.455 16.6862 9.36499 16.5384C9.27499 16.3905 9.15437 16.2729 9.00312 16.1856C8.85188 16.0983 8.68389 16.0547 8.49914 16.0547C8.31297 16.0547 8.14489 16.0983 7.99491 16.1856C7.84492 16.2729 7.72494 16.3905 7.63496 16.5384C7.54499 16.6862 7.5 16.8504 7.5 17.031C7.5 17.208 7.54499 17.3701 7.63496 17.5173C7.72494 17.6645 7.84492 17.7818 7.99491 17.8691C8.14489 17.9564 8.31297 18 8.49914 18Z"
										fill="#808080"
									/>
								</svg>
								<Row
									width="224px"
									className="justify-between items-center bg-[#333333] w-[224px] h-[36px] rounded-[8px] border border-[#333333]">
									<WhiteLabel
										className="my-[13px] ml-[16px] font-normal text-[#FFFFFF]"
										size="14px"
										text={item}
									/>
									<svg
										className="my-[13px] mr-[10px]"
										width="10"
										height="10"
										viewBox="0 0 10 10"
										fill="none"
										xmlns="http://www.w3.org/2000/svg">
										<path
											d="M0.164743 9.83518C0.240399 9.90666 0.326563 9.95502 0.423234 9.98025C0.519905 10.0055 0.616577 10.0055 0.713248 9.98025C0.809919 9.95502 0.893981 9.90666 0.965434 9.83518L5.00041 5.79829L9.03539 9.83518C9.10684 9.90666 9.1909 9.95502 9.28757 9.98025C9.38425 10.0055 9.48197 10.0065 9.58074 9.98341C9.67951 9.96028 9.76463 9.91087 9.83608 9.83518C9.90753 9.76369 9.95482 9.67959 9.97793 9.58287C10.0011 9.48616 10.0011 9.38944 9.97793 9.29272C9.95482 9.196 9.90753 9.1119 9.83608 9.04042L5.8011 4.99722L9.83608 0.960337C9.90753 0.888851 9.95587 0.804749 9.98109 0.708032C10.0063 0.611315 10.0063 0.514598 9.98109 0.417881C9.95587 0.321164 9.90753 0.237062 9.83608 0.165575C9.76042 0.0898838 9.67426 0.040474 9.57759 0.017346C9.48092 -0.005782 9.38425 -0.005782 9.28757 0.017346C9.1909 0.040474 9.10684 0.0898838 9.03539 0.165575L5.00041 4.20246L0.965434 0.165575C0.893981 0.0898838 0.808869 0.040474 0.710096 0.017346C0.611323 -0.005782 0.513601 -0.005782 0.416929 0.017346C0.320258 0.040474 0.236196 0.0898838 0.164743 0.165575C0.0932906 0.237062 0.0460057 0.321164 0.0228886 0.417881C-0.000228429 0.514598 -0.000228429 0.611315 0.0228886 0.708032C0.0460057 0.804749 0.0932906 0.888851 0.164743 0.960337L4.19972 4.99722L0.164743 9.04042C0.0932906 9.1119 0.0449549 9.196 0.0197363 9.29272C-0.00548231 9.38944 -0.00653308 9.48616 0.016584 9.58287C0.039701 9.67959 0.0890875 9.76369 0.164743 9.83518Z"
											fill="#808080"
										/>
									</svg>
								</Row>
							</Row>
						))}
					</ReactSortable>
				</Col>
			</Row>
		</Col>
	)
}

export default TableCol
