import React, {ReactNode} from 'react'
import s from './index.module.scss'
import ListItemButton from '@mui/material/ListItemButton'
import Collapse from '@mui/material/Collapse'
import ExpandLess from '@mui/icons-material/ExpandLess'
import ExpandMore from '@mui/icons-material/ExpandMore'
import Col from '../Col'
import NavLabel from '../NavLabel/index'
import Label from '../Label/index'
import Row from '../Row'

interface IStatusAccDropDown {
	className?: string // Add className property
	svg_icon_title: ReactNode
	text_title: string
	clicks_color: boolean // Green = True , Red = False
	clicks_counter: string
	text_link: string

	// Circle for Drop Down Menu. Max 4 elements
	circle_color_dw_1?: boolean // Green = True , Red = False
	circle_color_dw_2?: boolean // Green = True , Red = False
	circle_color_dw_3?: boolean // Green = True , Red = False
	circle_color_dw_4?: boolean // Green = True , Red = False

	// Text For Drop Down. Max 4 elements
	text_dw_1?: string
	text_dw_2?: string
	text_dw_3?: string
	text_dw_4?: string
}

const StatusAccDropDown: React.FC<IStatusAccDropDown> = ({
	className,
	svg_icon_title,
	text_title,
	clicks_color,
	clicks_counter,
	text_link,
	circle_color_dw_1,
	circle_color_dw_2,
	circle_color_dw_3,
	circle_color_dw_4,
	text_dw_1,
	text_dw_2,
	text_dw_3,
	text_dw_4,
}: IStatusAccDropDown) => {
	const [open, setOpen] = React.useState(false)

	const handleClick = () => {
		setOpen(!open)
	}

	return (
		<div className={s.OneBlockList + ' ' + className}>
			<ListItemButton sx={[
				{
					'&:hover': {
						background: 'none !important'
					},
					cursor: 'pointer',
					'*': {
						cursor: 'transparent'
					}
				}
			]} className={s.buttonList} onClick={handleClick}>
				<Col width="auto" className={s.ColList}>
					<Row width="auto" className={s.RowList}>
						{svg_icon_title}
						<span className={s.spanListCompany}>{text_title}</span>
						<Row width="auto">
							{clicks_color ? (
								<svg
									xmlns="http://www.w3.org/2000/svg"
									width="16"
									height="16"
									viewBox="0 0 16 16"
									fill="none">
									<path
										fillRule="evenodd"
										clipRule="evenodd"
										d="M2 7.93232C2 8.67289 2.13235 9.37566 2.39706 10.0406C2.66176 10.7056 3.02647 11.2998 3.49118 11.8232C3.95588 12.3467 4.48431 12.7693 5.07647 13.0911C5.19804 13.157 5.31373 13.1842 5.42353 13.1725C5.53333 13.1609 5.62451 13.1202 5.69706 13.0504C5.76961 12.9806 5.81667 12.8973 5.83824 12.8003C5.8598 12.7034 5.84706 12.6035 5.8 12.5008C5.75294 12.398 5.66078 12.3079 5.52353 12.2303C5.02941 11.9589 4.59314 11.6061 4.21471 11.1718C3.83627 10.7376 3.5402 10.2442 3.32647 9.69166C3.11275 9.13914 3.00588 8.5527 3.00588 7.93232C3.00588 7.24603 3.13431 6.60434 3.39118 6.00723C3.64804 5.41012 4.00392 4.88474 4.45882 4.43109C4.91373 3.97744 5.44314 3.62363 6.04706 3.36967C6.65098 3.1157 7.3 2.98872 7.99412 2.98872C8.68824 2.98872 9.33824 3.1157 9.94412 3.36967C10.55 3.62363 11.0814 3.97744 11.5382 4.43109C11.9951 4.88474 12.3529 5.41012 12.6118 6.00723C12.8706 6.60434 13 7.24603 13 7.93232C13 8.1068 13.0559 8.23669 13.1676 8.322C13.2794 8.4073 13.4 8.44995 13.5294 8.44995C13.6471 8.44995 13.7549 8.40633 13.8529 8.31909C13.951 8.23185 14 8.10293 14 7.93232C14 7.12196 13.8431 6.35909 13.5294 5.64373C13.2157 4.92836 12.7824 4.29732 12.2294 3.75062C11.6765 3.20391 11.0373 2.77547 10.3118 2.46528C9.58627 2.15509 8.81373 2 7.99412 2C7.17451 2 6.40294 2.15509 5.67941 2.46528C4.95588 2.77547 4.31863 3.20391 3.76765 3.75062C3.21667 4.29732 2.78431 4.92836 2.47059 5.64373C2.15686 6.35909 2 7.12196 2 7.93232ZM4.37647 7.93232C4.37647 8.36271 4.44804 8.76595 4.59118 9.14205C4.73431 9.51815 4.92549 9.85354 5.16471 10.1482C5.40392 10.4429 5.66667 10.6814 5.95294 10.8636C6.10196 10.9605 6.2402 10.9954 6.36765 10.9683C6.4951 10.9411 6.5951 10.8772 6.66765 10.7763C6.7402 10.6755 6.77157 10.565 6.76176 10.4448C6.75196 10.3246 6.68431 10.2219 6.55882 10.1366C6.19412 9.90007 5.90098 9.58891 5.67941 9.20312C5.45784 8.81733 5.34706 8.39373 5.34706 7.93232C5.34706 7.56398 5.41471 7.2218 5.55 6.9058C5.68529 6.5898 5.87451 6.3116 6.11765 6.0712C6.36078 5.83081 6.64216 5.64276 6.96176 5.50705C7.28137 5.37134 7.62549 5.30349 7.99412 5.30349C8.36275 5.30349 8.70588 5.37134 9.02353 5.50705C9.34118 5.64276 9.61961 5.82984 9.85882 6.06829C10.098 6.30675 10.2873 6.58495 10.4265 6.90289C10.5657 7.22083 10.6412 7.56398 10.6529 7.93232C10.6608 8.06415 10.7098 8.1766 10.8 8.26965C10.8902 8.36271 11.0039 8.40924 11.1412 8.40924C11.2745 8.40924 11.3882 8.36271 11.4824 8.26965C11.5765 8.1766 11.6235 8.06415 11.6235 7.93232C11.6235 7.4399 11.5294 6.97753 11.3412 6.54521C11.1529 6.11288 10.8912 5.73194 10.5559 5.40236C10.2206 5.07279 9.83431 4.81398 9.39706 4.62593C8.9598 4.43787 8.49216 4.34385 7.99412 4.34385C7.5 4.34385 7.03431 4.43787 6.59706 4.62593C6.1598 4.81398 5.77451 5.07279 5.44118 5.40236C5.10784 5.73194 4.84706 6.11288 4.65882 6.54521C4.47059 6.97753 4.37647 7.4399 4.37647 7.93232ZM7.92353 12.3583C7.82157 12.3273 7.77255 12.2556 7.77647 12.1431L7.82941 7.50194C7.82941 7.39337 7.87353 7.32261 7.96176 7.28965C8.05 7.2567 8.13137 7.27705 8.20588 7.35072L11.4235 10.6193C11.502 10.7007 11.5206 10.7841 11.4794 10.8694C11.4382 10.9547 11.3627 10.9993 11.2529 11.0032L9.98235 11.0555L11.0412 13.475C11.0647 13.5293 11.0676 13.5835 11.05 13.6378C11.0324 13.6921 10.998 13.7309 10.9471 13.7541L10.3588 13.9868C10.3078 14.0062 10.2559 14.0042 10.2029 13.981C10.15 13.9577 10.1118 13.9189 10.0882 13.8646L9.08235 11.4103L8.18824 12.3001C8.11373 12.3699 8.02549 12.3893 7.92353 12.3583Z"
										fill="#57BD53"
									/>
								</svg>
							) : (
								<svg
									xmlns="http://www.w3.org/2000/svg"
									width="16"
									height="16"
									viewBox="0 0 16 16"
									fill="none">
									<path
										fillRule="evenodd"
										clipRule="evenodd"
										d="M2 7.93232C2 8.67289 2.13235 9.37566 2.39706 10.0406C2.66176 10.7056 3.02647 11.2998 3.49118 11.8232C3.95588 12.3467 4.48431 12.7693 5.07647 13.0911C5.19804 13.157 5.31373 13.1842 5.42353 13.1725C5.53333 13.1609 5.62451 13.1202 5.69706 13.0504C5.76961 12.9806 5.81667 12.8973 5.83824 12.8003C5.8598 12.7034 5.84706 12.6035 5.8 12.5008C5.75294 12.398 5.66078 12.3079 5.52353 12.2303C5.02941 11.9589 4.59314 11.6061 4.21471 11.1718C3.83627 10.7376 3.5402 10.2442 3.32647 9.69166C3.11275 9.13914 3.00588 8.5527 3.00588 7.93232C3.00588 7.24603 3.13431 6.60434 3.39118 6.00723C3.64804 5.41012 4.00392 4.88474 4.45882 4.43109C4.91373 3.97744 5.44314 3.62363 6.04706 3.36967C6.65098 3.1157 7.3 2.98872 7.99412 2.98872C8.68824 2.98872 9.33824 3.1157 9.94412 3.36967C10.55 3.62363 11.0814 3.97744 11.5382 4.43109C11.9951 4.88474 12.3529 5.41012 12.6118 6.00723C12.8706 6.60434 13 7.24603 13 7.93232C13 8.1068 13.0559 8.23669 13.1676 8.322C13.2794 8.4073 13.4 8.44995 13.5294 8.44995C13.6471 8.44995 13.7549 8.40633 13.8529 8.31909C13.951 8.23185 14 8.10293 14 7.93232C14 7.12196 13.8431 6.35909 13.5294 5.64373C13.2157 4.92836 12.7824 4.29732 12.2294 3.75062C11.6765 3.20391 11.0373 2.77547 10.3118 2.46528C9.58627 2.15509 8.81373 2 7.99412 2C7.17451 2 6.40294 2.15509 5.67941 2.46528C4.95588 2.77547 4.31863 3.20391 3.76765 3.75062C3.21667 4.29732 2.78431 4.92836 2.47059 5.64373C2.15686 6.35909 2 7.12196 2 7.93232ZM4.37647 7.93232C4.37647 8.36271 4.44804 8.76595 4.59118 9.14205C4.73431 9.51815 4.92549 9.85354 5.16471 10.1482C5.40392 10.4429 5.66667 10.6814 5.95294 10.8636C6.10196 10.9605 6.2402 10.9954 6.36765 10.9683C6.4951 10.9411 6.5951 10.8772 6.66765 10.7763C6.7402 10.6755 6.77157 10.565 6.76176 10.4448C6.75196 10.3246 6.68431 10.2219 6.55882 10.1366C6.19412 9.90007 5.90098 9.58891 5.67941 9.20312C5.45784 8.81733 5.34706 8.39373 5.34706 7.93232C5.34706 7.56398 5.41471 7.2218 5.55 6.9058C5.68529 6.5898 5.87451 6.3116 6.11765 6.0712C6.36078 5.83081 6.64216 5.64276 6.96176 5.50705C7.28137 5.37134 7.62549 5.30349 7.99412 5.30349C8.36275 5.30349 8.70588 5.37134 9.02353 5.50705C9.34118 5.64276 9.61961 5.82984 9.85882 6.06829C10.098 6.30675 10.2873 6.58495 10.4265 6.90289C10.5657 7.22083 10.6412 7.56398 10.6529 7.93232C10.6608 8.06415 10.7098 8.1766 10.8 8.26965C10.8902 8.36271 11.0039 8.40924 11.1412 8.40924C11.2745 8.40924 11.3882 8.36271 11.4824 8.26965C11.5765 8.1766 11.6235 8.06415 11.6235 7.93232C11.6235 7.4399 11.5294 6.97753 11.3412 6.54521C11.1529 6.11288 10.8912 5.73194 10.5559 5.40236C10.2206 5.07279 9.83431 4.81398 9.39706 4.62593C8.9598 4.43787 8.49216 4.34385 7.99412 4.34385C7.5 4.34385 7.03431 4.43787 6.59706 4.62593C6.1598 4.81398 5.77451 5.07279 5.44118 5.40236C5.10784 5.73194 4.84706 6.11288 4.65882 6.54521C4.47059 6.97753 4.37647 7.4399 4.37647 7.93232ZM7.92353 12.3583C7.82157 12.3273 7.77255 12.2556 7.77647 12.1431L7.82941 7.50194C7.82941 7.39337 7.87353 7.32261 7.96176 7.28965C8.05 7.2567 8.13137 7.27705 8.20588 7.35072L11.4235 10.6193C11.502 10.7007 11.5206 10.7841 11.4794 10.8694C11.4382 10.9547 11.3627 10.9993 11.2529 11.0032L9.98235 11.0555L11.0412 13.475C11.0647 13.5293 11.0676 13.5835 11.05 13.6378C11.0324 13.6921 10.998 13.7309 10.9471 13.7541L10.3588 13.9868C10.3078 14.0062 10.2559 14.0042 10.2029 13.981C10.15 13.9577 10.1118 13.9189 10.0882 13.8646L9.08235 11.4103L8.18824 12.3001C8.11373 12.3699 8.02549 12.3893 7.92353 12.3583Z"
										fill="#F3553E"
									/>
								</svg>
							)}
							<span
								className={s.count}
								style={clicks_color ? {color: '#57BD53'} : {color: '#F3553E'}}>
								{clicks_counter}
							</span>
						</Row>
					</Row>
					<Label isMini={true} text={`${text_link}`} />
				</Col>
				{open ? (
					<>
						<div className={s.emptyDiv}></div>
						<ExpandLess />
					</>
				) : (
					<>
						<div className={s.emptyDiv}></div>
						<ExpandMore />
					</>
				)}
			</ListItemButton>
			<Collapse in={open} timeout="auto" unmountOnExit>
				<Col width="276px" className={s.ListInside}>
					<Row width="248px" className={s.ListInsideRow}>
						{circle_color_dw_1 ? (
							<svg
								xmlns="http://www.w3.org/2000/svg"
								width="16"
								height="16"
								viewBox="0 0 16 16"
								fill="none">
								<rect x="4" y="4" width="8" height="8" rx="4" fill="#57BD53" />
							</svg>
						) : (
							<svg
								xmlns="http://www.w3.org/2000/svg"
								width="16"
								height="16"
								viewBox="0 0 16 16"
								fill="none">
								<rect x="4" y="4" width="8" height="8" rx="4" fill="#F3553E" />
							</svg>
						)}
						<NavLabel className={s.NavLabelListInside} text={`${text_dw_1}`} />
					</Row>
					<Row width="248px" className={s.ListInsideRow}>
						{circle_color_dw_2 ? (
							<svg
								xmlns="http://www.w3.org/2000/svg"
								width="16"
								height="16"
								viewBox="0 0 16 16"
								fill="none">
								<rect x="4" y="4" width="8" height="8" rx="4" fill="#57BD53" />
							</svg>
						) : (
							<svg
								xmlns="http://www.w3.org/2000/svg"
								width="16"
								height="16"
								viewBox="0 0 16 16"
								fill="none">
								<rect x="4" y="4" width="8" height="8" rx="4" fill="#F3553E" />
							</svg>
						)}
						<NavLabel className={s.NavLabelListInside} text={`${text_dw_2}`} />
					</Row>
					<Row width="248px" className={s.ListInsideRow}>
						{circle_color_dw_3 ? (
							<svg
								xmlns="http://www.w3.org/2000/svg"
								width="16"
								height="16"
								viewBox="0 0 16 16"
								fill="none">
								<rect x="4" y="4" width="8" height="8" rx="4" fill="#57BD53" />
							</svg>
						) : (
							<svg
								xmlns="http://www.w3.org/2000/svg"
								width="16"
								height="16"
								viewBox="0 0 16 16"
								fill="none">
								<rect x="4" y="4" width="8" height="8" rx="4" fill="#F3553E" />
							</svg>
						)}
						<NavLabel className={s.NavLabelListInside} text={`${text_dw_3}`} />
					</Row>
					<Row width="248px" className={s.ListInsideRow}>
						{circle_color_dw_4 ? (
							<svg
								xmlns="http://www.w3.org/2000/svg"
								width="16"
								height="16"
								viewBox="0 0 16 16"
								fill="none">
								<rect x="4" y="4" width="8" height="8" rx="4" fill="#57BD53" />
							</svg>
						) : (
							<svg
								xmlns="http://www.w3.org/2000/svg"
								width="16"
								height="16"
								viewBox="0 0 16 16"
								fill="none">
								<rect x="4" y="4" width="8" height="8" rx="4" fill="#F3553E" />
							</svg>
						)}
						<NavLabel className={s.NavLabelListInside} text={`${text_dw_4}`} />
					</Row>
				</Col>
			</Collapse>
		</div>
	)
}

export default StatusAccDropDown
