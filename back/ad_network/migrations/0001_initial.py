# Generated by Django 4.1.5 on 2023-11-05 14:22

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
        ('ad_advertiser', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='channelModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания')),
                ('channel_link', models.CharField(max_length=255, verbose_name='Ссылка на медиаресурс')),
            ],
            options={
                'verbose_name': 'Канал',
                'verbose_name_plural': 'Каналы',
            },
        ),
        migrations.CreateModel(
            name='profileModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ad_network_profileModel', to='account.accountmodel')),
            ],
            options={
                'verbose_name': 'Профиль',
                'verbose_name_plural': 'Профили',
            },
        ),
        migrations.CreateModel(
            name='setting_notificationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_notification_bool', models.BooleanField(default=False, verbose_name='Уведомления для сайта')),
                ('type_notification', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('important', 'Важное'), ('ad_channel', 'Подключенный медиаресурс'), ('ad_banner', 'Подключенный баннер'), ('finance', 'Финансы'), ('access', 'Доступ'), ('technical_support', 'Техподдержка'), ('service_change', 'Изменения в сервисе'), ('referral_program', 'Реферальная программа')], max_length=40), blank=True, default=list, size=None)),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='setting_notificationModel_profileModel', to='ad_network.profilemodel')),
                ('social_network', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ad_network_setting_notificationModel_social_networkModel', to='account.social_networkmodel')),
            ],
            options={
                'verbose_name': 'Настройка ресурса для получения уведомлений',
                'verbose_name_plural': 'Настройки ресурсов для получения уведомлений',
            },
        ),
        migrations.CreateModel(
            name='notificationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_notification_bool', models.BooleanField(default=False, verbose_name='Уведомление для сайта')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания')),
                ('read_bool', models.BooleanField(default=False, verbose_name='Прочитано?')),
                ('type_notification', models.CharField(choices=[('important', 'Важное'), ('ad_channel', 'Подключенный медиаресурс'), ('ad_banner', 'Подключенный баннер'), ('finance', 'Финансы'), ('access', 'Доступ'), ('technical_support', 'Техподдержка'), ('service_change', 'Изменения в сервисе'), ('referral_program', 'Реферальная программа')], max_length=40, verbose_name='Тип уведомления')),
                ('text_notification', models.CharField(max_length=150, verbose_name='Текст уведомления')),
                ('text_button', models.CharField(max_length=50, verbose_name='Текст кнопки')),
                ('link_button', models.URLField(verbose_name='Ссылка кнопки')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificationModel_profileModel', to='ad_network.profilemodel')),
                ('social_network', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ad_network_notificationModel_social_networkModel', to='account.social_networkmodel')),
            ],
            options={
                'verbose_name': 'Уведомление',
                'verbose_name_plural': 'Уведомления',
            },
        ),
        migrations.CreateModel(
            name='finance_operationModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_creation', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания')),
                ('operation', models.CharField(choices=[('put', 'Пополнение'), ('withdraw', 'Вывод')], max_length=20, verbose_name='Тип операции')),
                ('cost', models.PositiveIntegerField(default=0, verbose_name='Цена')),
                ('promocode', models.CharField(max_length=20, verbose_name='Промокод')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ad_network.profilemodel')),
            ],
            options={
                'verbose_name': 'Финансовая операция',
                'verbose_name_plural': 'Финансовые операции',
            },
        ),
        migrations.CreateModel(
            name='channel_profileModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channel_profileModel_channelModel', to='ad_network.channelmodel')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='channel_profileModel_profileModel', to='ad_network.profilemodel')),
            ],
            options={
                'verbose_name': 'Канал профиля',
                'verbose_name_plural': 'Каналы профилей',
            },
        ),
        migrations.CreateModel(
            name='banner_profileModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ad_banner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='banner_profileModel_ad_bannerModel', to='ad_advertiser.ad_bannermodel')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='banner_profileModel_profileModel', to='ad_network.profilemodel')),
            ],
            options={
                'verbose_name': 'Баннер профиля',
                'verbose_name_plural': 'Баннеры профилей',
            },
        ),
        migrations.CreateModel(
            name='banner_chosenModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ad_banner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='banner_chosenModel_ad_bannerModel', to='ad_advertiser.ad_bannermodel')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='banner_chosenModel_profileModel', to='ad_network.profilemodel')),
            ],
            options={
                'verbose_name': 'Избранный баннер',
                'verbose_name_plural': 'Избранные баннеры',
            },
        ),
    ]
